[package]
name = "brongan_com"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
anyhow = "1.0"
artem = { version = "1.2", default-features = false }
async-rustls = { version = "0.4.0", optional = true }
axum = { version = "0.6.16", features = ["macros"], optional = true }
axum-server = { version = "0.5.1", features = ["tls-rustls"], optional = true }
base64 = "0.13"
cfg-if = "1.0.0"
clap = { version = "4.2", features = ["derive"] }
color-eyre = "0.6.2"
fixedbitset = "0.4"
futures = "0.3.28"
futures-util = "0.3.28"
getrandom = { version = "0.2", features = ["js"] }
gloo-events = {version = "0.1", optional = true}
gloo-net = { version = "0.2", optional = true}
gloo-timers = { version = "0.2", optional = true}
hyper = { version = "0.14.27", optional = true }
image = "0.24"
imageproc = "0.23"
js-sys = { version = "0.3", optional = true}
leptos = { version = "0.5", features = ["nightly", "csr"] }
leptos-use = "0.8.0"
leptos_axum = { version = "0.5", optional = true }
leptos_router = { version = "0.5", features = ["nightly"] }
libsqlite3-sys = { version = "*", features = [], optional = true}
log = "0.4"
maxminddb = "0.23.0"
nom = "7.0"
num = { version = "0.4", features = ["serde"] }
num-traits = "0.2.17"
opentelemetry = { version = "0.18.0", features = ["rt-tokio"], optional = true }
opentelemetry-honeycomb = { git = "https://github.com/fasterthanlime/opentelemetry-honeycomb-rs", branch = "simplified", version = "0.1.0", optional = true }
pretty-hex = "0.3.0"
rand = "0.8"
rayon = "1.7.0"
reqwest = { version = "0.11", default-features = false, features = ["json","rustls-tls-webpki-roots"], optional = true }
rusqlite = { version = "0.29.0", optional = true }
rusttype = "0.9"
sentry = { version = "0.31", default-features = false, features = ["reqwest", "rustls", "backtrace", "contexts", "panic"], optional = true}
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
strum = "0.24"
strum_macros = "0.24"
thiserror = "1.0.40"
tokio = { version = "1.28", features = ["full", "fs", "test-util"], optional = true }
tokio-rusqlite = { version = "0.4.0", optional = true }
tokio-stream = { version = "0.1.14", optional = true }
tokio-util = { version = "0.7.8", optional = true }
tower = { version = "0.4.13", optional = true }
tower-http = { version = "0.4.1", features = ["full"], optional = true }
tracing = { version ="0.1", optional = true }
tracing-subscriber = { version = "0.3", features = ["json"] }
wasm-bindgen = "=0.2.87"
wasm-logger = {version = "0.2", optional = true}
web-sys = "0.3"

[features]
default = ["ssr"]
hydrate = ["leptos/hydrate", "leptos_router/hydrate", "dep:gloo-events",
"dep:gloo-net",
"dep:gloo-timers",
"dep:js-sys",
"dep:wasm-logger"]

ssr = [
    "dep:async-rustls",
    "dep:axum",
    "dep:axum-server",
    "dep:hyper",
    "dep:leptos_axum",
    "dep:libsqlite3-sys",
    "dep:opentelemetry",
    "dep:opentelemetry-honeycomb",
    "dep:rusqlite",
    "dep:reqwest",
    "dep:tokio",
    "dep:tokio-rusqlite",
    "dep:tokio-stream",
    "dep:tower",
    "dep:tower-http",
    "leptos/ssr",
    "leptos_router/ssr",
    "dep:tracing",
]

[profile.release]
debug = 1 # Include enough debug info for sentry to be useful
opt-level = "z"  # Optimize for size.
lto = true # Enable link-time optimization

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
codegen-units = 1
panic = "abort"

[package.metadata.leptos]
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"
# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"
assets-dir = "assets"
site-address = "127.0.0.1:3000"
# The port to use for automatic reload monitoring
reload-port = 3001
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
bin-features = ["ssr"]
lib-features = ["hydrate"]
env = "dev"
